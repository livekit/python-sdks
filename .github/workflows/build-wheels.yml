name: Build

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels (${{ matrix.archs }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # wheels to build:
        include:
          - os: ubuntu-latest
            archs: x86_64
          - os: buildjet-4vcpu-ubuntu-2204-arm
            archs: aarch64
          - os: windows-latest
            archs: AMD64 # ignore windows arm64 for now
          - os: macos-latest
            archs: x86_64 arm64

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-python@v4

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel==2.15.0

      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir dist
        env:
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_SKIP: "*-musllinux_*"

      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: dist/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: dist/*.tar.gz

  publish:
    name: Publish
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    # only execute on tag push v1 or workflow_dispatch
    if: (github.event_name == 'push' && github.ref_type == 'tag') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
