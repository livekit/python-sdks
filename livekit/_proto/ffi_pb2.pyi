"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from . import audio_frame_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
from . import handle_pb2
from . import participant_pb2
from . import room_pb2
import sys
from . import track_pb2
from . import video_frame_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class FfiRequest(google.protobuf.message.Message):
    """/ This is the input of livekit_ffi_request function
    / We always expect a response (FFIResponse)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INITIALIZE_FIELD_NUMBER: builtins.int
    DISPOSE_FIELD_NUMBER: builtins.int
    CONNECT_FIELD_NUMBER: builtins.int
    DISCONNECT_FIELD_NUMBER: builtins.int
    PUBLISH_TRACK_FIELD_NUMBER: builtins.int
    UNPUBLISH_TRACK_FIELD_NUMBER: builtins.int
    PUBLISH_DATA_FIELD_NUMBER: builtins.int
    SET_SUBSCRIBED_FIELD_NUMBER: builtins.int
    CREATE_VIDEO_TRACK_FIELD_NUMBER: builtins.int
    CREATE_AUDIO_TRACK_FIELD_NUMBER: builtins.int
    ALLOC_VIDEO_BUFFER_FIELD_NUMBER: builtins.int
    NEW_VIDEO_STREAM_FIELD_NUMBER: builtins.int
    NEW_VIDEO_SOURCE_FIELD_NUMBER: builtins.int
    CAPTURE_VIDEO_FRAME_FIELD_NUMBER: builtins.int
    TO_I420_FIELD_NUMBER: builtins.int
    TO_ARGB_FIELD_NUMBER: builtins.int
    ALLOC_AUDIO_BUFFER_FIELD_NUMBER: builtins.int
    NEW_AUDIO_STREAM_FIELD_NUMBER: builtins.int
    NEW_AUDIO_SOURCE_FIELD_NUMBER: builtins.int
    CAPTURE_AUDIO_FRAME_FIELD_NUMBER: builtins.int
    NEW_AUDIO_RESAMPLER_FIELD_NUMBER: builtins.int
    REMIX_AND_RESAMPLE_FIELD_NUMBER: builtins.int
    @property
    def initialize(self) -> global___InitializeRequest: ...
    @property
    def dispose(self) -> global___DisposeRequest: ...
    @property
    def connect(self) -> room_pb2.ConnectRequest:
        """Room"""
    @property
    def disconnect(self) -> room_pb2.DisconnectRequest: ...
    @property
    def publish_track(self) -> room_pb2.PublishTrackRequest: ...
    @property
    def unpublish_track(self) -> room_pb2.UnpublishTrackRequest: ...
    @property
    def publish_data(self) -> room_pb2.PublishDataRequest: ...
    @property
    def set_subscribed(self) -> room_pb2.SetSubscribedRequest: ...
    @property
    def create_video_track(self) -> track_pb2.CreateVideoTrackRequest:
        """Track"""
    @property
    def create_audio_track(self) -> track_pb2.CreateAudioTrackRequest: ...
    @property
    def alloc_video_buffer(self) -> video_frame_pb2.AllocVideoBufferRequest:
        """Video"""
    @property
    def new_video_stream(self) -> video_frame_pb2.NewVideoStreamRequest: ...
    @property
    def new_video_source(self) -> video_frame_pb2.NewVideoSourceRequest: ...
    @property
    def capture_video_frame(self) -> video_frame_pb2.CaptureVideoFrameRequest: ...
    @property
    def to_i420(self) -> video_frame_pb2.ToI420Request: ...
    @property
    def to_argb(self) -> video_frame_pb2.ToArgbRequest: ...
    @property
    def alloc_audio_buffer(self) -> audio_frame_pb2.AllocAudioBufferRequest:
        """Audio"""
    @property
    def new_audio_stream(self) -> audio_frame_pb2.NewAudioStreamRequest: ...
    @property
    def new_audio_source(self) -> audio_frame_pb2.NewAudioSourceRequest: ...
    @property
    def capture_audio_frame(self) -> audio_frame_pb2.CaptureAudioFrameRequest: ...
    @property
    def new_audio_resampler(self) -> audio_frame_pb2.NewAudioResamplerRequest: ...
    @property
    def remix_and_resample(self) -> audio_frame_pb2.RemixAndResampleRequest: ...
    def __init__(
        self,
        *,
        initialize: global___InitializeRequest | None = ...,
        dispose: global___DisposeRequest | None = ...,
        connect: room_pb2.ConnectRequest | None = ...,
        disconnect: room_pb2.DisconnectRequest | None = ...,
        publish_track: room_pb2.PublishTrackRequest | None = ...,
        unpublish_track: room_pb2.UnpublishTrackRequest | None = ...,
        publish_data: room_pb2.PublishDataRequest | None = ...,
        set_subscribed: room_pb2.SetSubscribedRequest | None = ...,
        create_video_track: track_pb2.CreateVideoTrackRequest | None = ...,
        create_audio_track: track_pb2.CreateAudioTrackRequest | None = ...,
        alloc_video_buffer: video_frame_pb2.AllocVideoBufferRequest | None = ...,
        new_video_stream: video_frame_pb2.NewVideoStreamRequest | None = ...,
        new_video_source: video_frame_pb2.NewVideoSourceRequest | None = ...,
        capture_video_frame: video_frame_pb2.CaptureVideoFrameRequest | None = ...,
        to_i420: video_frame_pb2.ToI420Request | None = ...,
        to_argb: video_frame_pb2.ToArgbRequest | None = ...,
        alloc_audio_buffer: audio_frame_pb2.AllocAudioBufferRequest | None = ...,
        new_audio_stream: audio_frame_pb2.NewAudioStreamRequest | None = ...,
        new_audio_source: audio_frame_pb2.NewAudioSourceRequest | None = ...,
        capture_audio_frame: audio_frame_pb2.CaptureAudioFrameRequest | None = ...,
        new_audio_resampler: audio_frame_pb2.NewAudioResamplerRequest | None = ...,
        remix_and_resample: audio_frame_pb2.RemixAndResampleRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alloc_audio_buffer", b"alloc_audio_buffer", "alloc_video_buffer", b"alloc_video_buffer", "capture_audio_frame", b"capture_audio_frame", "capture_video_frame", b"capture_video_frame", "connect", b"connect", "create_audio_track", b"create_audio_track", "create_video_track", b"create_video_track", "disconnect", b"disconnect", "dispose", b"dispose", "initialize", b"initialize", "message", b"message", "new_audio_resampler", b"new_audio_resampler", "new_audio_source", b"new_audio_source", "new_audio_stream", b"new_audio_stream", "new_video_source", b"new_video_source", "new_video_stream", b"new_video_stream", "publish_data", b"publish_data", "publish_track", b"publish_track", "remix_and_resample", b"remix_and_resample", "set_subscribed", b"set_subscribed", "to_argb", b"to_argb", "to_i420", b"to_i420", "unpublish_track", b"unpublish_track"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alloc_audio_buffer", b"alloc_audio_buffer", "alloc_video_buffer", b"alloc_video_buffer", "capture_audio_frame", b"capture_audio_frame", "capture_video_frame", b"capture_video_frame", "connect", b"connect", "create_audio_track", b"create_audio_track", "create_video_track", b"create_video_track", "disconnect", b"disconnect", "dispose", b"dispose", "initialize", b"initialize", "message", b"message", "new_audio_resampler", b"new_audio_resampler", "new_audio_source", b"new_audio_source", "new_audio_stream", b"new_audio_stream", "new_video_source", b"new_video_source", "new_video_stream", b"new_video_stream", "publish_data", b"publish_data", "publish_track", b"publish_track", "remix_and_resample", b"remix_and_resample", "set_subscribed", b"set_subscribed", "to_argb", b"to_argb", "to_i420", b"to_i420", "unpublish_track", b"unpublish_track"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["initialize", "dispose", "connect", "disconnect", "publish_track", "unpublish_track", "publish_data", "set_subscribed", "create_video_track", "create_audio_track", "alloc_video_buffer", "new_video_stream", "new_video_source", "capture_video_frame", "to_i420", "to_argb", "alloc_audio_buffer", "new_audio_stream", "new_audio_source", "capture_audio_frame", "new_audio_resampler", "remix_and_resample"] | None: ...

global___FfiRequest = FfiRequest

@typing_extensions.final
class FfiResponse(google.protobuf.message.Message):
    """/ This is the output of livekit_ffi_request function."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INITIALIZE_FIELD_NUMBER: builtins.int
    DISPOSE_FIELD_NUMBER: builtins.int
    CONNECT_FIELD_NUMBER: builtins.int
    DISCONNECT_FIELD_NUMBER: builtins.int
    PUBLISH_TRACK_FIELD_NUMBER: builtins.int
    UNPUBLISH_TRACK_FIELD_NUMBER: builtins.int
    PUBLISH_DATA_FIELD_NUMBER: builtins.int
    SET_SUBSCRIBED_FIELD_NUMBER: builtins.int
    CREATE_VIDEO_TRACK_FIELD_NUMBER: builtins.int
    CREATE_AUDIO_TRACK_FIELD_NUMBER: builtins.int
    ALLOC_VIDEO_BUFFER_FIELD_NUMBER: builtins.int
    NEW_VIDEO_STREAM_FIELD_NUMBER: builtins.int
    NEW_VIDEO_SOURCE_FIELD_NUMBER: builtins.int
    CAPTURE_VIDEO_FRAME_FIELD_NUMBER: builtins.int
    TO_I420_FIELD_NUMBER: builtins.int
    TO_ARGB_FIELD_NUMBER: builtins.int
    ALLOC_AUDIO_BUFFER_FIELD_NUMBER: builtins.int
    NEW_AUDIO_STREAM_FIELD_NUMBER: builtins.int
    NEW_AUDIO_SOURCE_FIELD_NUMBER: builtins.int
    CAPTURE_AUDIO_FRAME_FIELD_NUMBER: builtins.int
    NEW_AUDIO_RESAMPLER_FIELD_NUMBER: builtins.int
    REMIX_AND_RESAMPLE_FIELD_NUMBER: builtins.int
    @property
    def initialize(self) -> global___InitializeResponse: ...
    @property
    def dispose(self) -> global___DisposeResponse: ...
    @property
    def connect(self) -> room_pb2.ConnectResponse:
        """Room"""
    @property
    def disconnect(self) -> room_pb2.DisconnectResponse: ...
    @property
    def publish_track(self) -> room_pb2.PublishTrackResponse: ...
    @property
    def unpublish_track(self) -> room_pb2.UnpublishTrackResponse: ...
    @property
    def publish_data(self) -> room_pb2.PublishDataResponse: ...
    @property
    def set_subscribed(self) -> room_pb2.SetSubscribedResponse: ...
    @property
    def create_video_track(self) -> track_pb2.CreateVideoTrackResponse:
        """Track"""
    @property
    def create_audio_track(self) -> track_pb2.CreateAudioTrackResponse: ...
    @property
    def alloc_video_buffer(self) -> video_frame_pb2.AllocVideoBufferResponse:
        """Video"""
    @property
    def new_video_stream(self) -> video_frame_pb2.NewVideoStreamResponse: ...
    @property
    def new_video_source(self) -> video_frame_pb2.NewVideoSourceResponse: ...
    @property
    def capture_video_frame(self) -> video_frame_pb2.CaptureVideoFrameResponse: ...
    @property
    def to_i420(self) -> video_frame_pb2.ToI420Response: ...
    @property
    def to_argb(self) -> video_frame_pb2.ToArgbResponse: ...
    @property
    def alloc_audio_buffer(self) -> audio_frame_pb2.AllocAudioBufferResponse:
        """Audio"""
    @property
    def new_audio_stream(self) -> audio_frame_pb2.NewAudioStreamResponse: ...
    @property
    def new_audio_source(self) -> audio_frame_pb2.NewAudioSourceResponse: ...
    @property
    def capture_audio_frame(self) -> audio_frame_pb2.CaptureAudioFrameResponse: ...
    @property
    def new_audio_resampler(self) -> audio_frame_pb2.NewAudioResamplerResponse: ...
    @property
    def remix_and_resample(self) -> audio_frame_pb2.RemixAndResampleResponse: ...
    def __init__(
        self,
        *,
        initialize: global___InitializeResponse | None = ...,
        dispose: global___DisposeResponse | None = ...,
        connect: room_pb2.ConnectResponse | None = ...,
        disconnect: room_pb2.DisconnectResponse | None = ...,
        publish_track: room_pb2.PublishTrackResponse | None = ...,
        unpublish_track: room_pb2.UnpublishTrackResponse | None = ...,
        publish_data: room_pb2.PublishDataResponse | None = ...,
        set_subscribed: room_pb2.SetSubscribedResponse | None = ...,
        create_video_track: track_pb2.CreateVideoTrackResponse | None = ...,
        create_audio_track: track_pb2.CreateAudioTrackResponse | None = ...,
        alloc_video_buffer: video_frame_pb2.AllocVideoBufferResponse | None = ...,
        new_video_stream: video_frame_pb2.NewVideoStreamResponse | None = ...,
        new_video_source: video_frame_pb2.NewVideoSourceResponse | None = ...,
        capture_video_frame: video_frame_pb2.CaptureVideoFrameResponse | None = ...,
        to_i420: video_frame_pb2.ToI420Response | None = ...,
        to_argb: video_frame_pb2.ToArgbResponse | None = ...,
        alloc_audio_buffer: audio_frame_pb2.AllocAudioBufferResponse | None = ...,
        new_audio_stream: audio_frame_pb2.NewAudioStreamResponse | None = ...,
        new_audio_source: audio_frame_pb2.NewAudioSourceResponse | None = ...,
        capture_audio_frame: audio_frame_pb2.CaptureAudioFrameResponse | None = ...,
        new_audio_resampler: audio_frame_pb2.NewAudioResamplerResponse | None = ...,
        remix_and_resample: audio_frame_pb2.RemixAndResampleResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alloc_audio_buffer", b"alloc_audio_buffer", "alloc_video_buffer", b"alloc_video_buffer", "capture_audio_frame", b"capture_audio_frame", "capture_video_frame", b"capture_video_frame", "connect", b"connect", "create_audio_track", b"create_audio_track", "create_video_track", b"create_video_track", "disconnect", b"disconnect", "dispose", b"dispose", "initialize", b"initialize", "message", b"message", "new_audio_resampler", b"new_audio_resampler", "new_audio_source", b"new_audio_source", "new_audio_stream", b"new_audio_stream", "new_video_source", b"new_video_source", "new_video_stream", b"new_video_stream", "publish_data", b"publish_data", "publish_track", b"publish_track", "remix_and_resample", b"remix_and_resample", "set_subscribed", b"set_subscribed", "to_argb", b"to_argb", "to_i420", b"to_i420", "unpublish_track", b"unpublish_track"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alloc_audio_buffer", b"alloc_audio_buffer", "alloc_video_buffer", b"alloc_video_buffer", "capture_audio_frame", b"capture_audio_frame", "capture_video_frame", b"capture_video_frame", "connect", b"connect", "create_audio_track", b"create_audio_track", "create_video_track", b"create_video_track", "disconnect", b"disconnect", "dispose", b"dispose", "initialize", b"initialize", "message", b"message", "new_audio_resampler", b"new_audio_resampler", "new_audio_source", b"new_audio_source", "new_audio_stream", b"new_audio_stream", "new_video_source", b"new_video_source", "new_video_stream", b"new_video_stream", "publish_data", b"publish_data", "publish_track", b"publish_track", "remix_and_resample", b"remix_and_resample", "set_subscribed", b"set_subscribed", "to_argb", b"to_argb", "to_i420", b"to_i420", "unpublish_track", b"unpublish_track"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["initialize", "dispose", "connect", "disconnect", "publish_track", "unpublish_track", "publish_data", "set_subscribed", "create_video_track", "create_audio_track", "alloc_video_buffer", "new_video_stream", "new_video_source", "capture_video_frame", "to_i420", "to_argb", "alloc_audio_buffer", "new_audio_stream", "new_audio_source", "capture_audio_frame", "new_audio_resampler", "remix_and_resample"] | None: ...

global___FfiResponse = FfiResponse

@typing_extensions.final
class FfiEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_EVENT_FIELD_NUMBER: builtins.int
    TRACK_EVENT_FIELD_NUMBER: builtins.int
    PARTICIPANT_EVENT_FIELD_NUMBER: builtins.int
    VIDEO_STREAM_EVENT_FIELD_NUMBER: builtins.int
    AUDIO_STREAM_EVENT_FIELD_NUMBER: builtins.int
    CONNECT_FIELD_NUMBER: builtins.int
    DISCONNECT_FIELD_NUMBER: builtins.int
    DISPOSE_FIELD_NUMBER: builtins.int
    PUBLISH_TRACK_FIELD_NUMBER: builtins.int
    PUBLISH_DATA_FIELD_NUMBER: builtins.int
    @property
    def room_event(self) -> room_pb2.RoomEvent: ...
    @property
    def track_event(self) -> track_pb2.TrackEvent: ...
    @property
    def participant_event(self) -> participant_pb2.ParticipantEvent: ...
    @property
    def video_stream_event(self) -> video_frame_pb2.VideoStreamEvent: ...
    @property
    def audio_stream_event(self) -> audio_frame_pb2.AudioStreamEvent: ...
    @property
    def connect(self) -> room_pb2.ConnectCallback: ...
    @property
    def disconnect(self) -> room_pb2.DisconnectCallback: ...
    @property
    def dispose(self) -> global___DisposeCallback: ...
    @property
    def publish_track(self) -> room_pb2.PublishTrackCallback: ...
    @property
    def publish_data(self) -> room_pb2.PublishDataCallback: ...
    def __init__(
        self,
        *,
        room_event: room_pb2.RoomEvent | None = ...,
        track_event: track_pb2.TrackEvent | None = ...,
        participant_event: participant_pb2.ParticipantEvent | None = ...,
        video_stream_event: video_frame_pb2.VideoStreamEvent | None = ...,
        audio_stream_event: audio_frame_pb2.AudioStreamEvent | None = ...,
        connect: room_pb2.ConnectCallback | None = ...,
        disconnect: room_pb2.DisconnectCallback | None = ...,
        dispose: global___DisposeCallback | None = ...,
        publish_track: room_pb2.PublishTrackCallback | None = ...,
        publish_data: room_pb2.PublishDataCallback | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_stream_event", b"audio_stream_event", "connect", b"connect", "disconnect", b"disconnect", "dispose", b"dispose", "message", b"message", "participant_event", b"participant_event", "publish_data", b"publish_data", "publish_track", b"publish_track", "room_event", b"room_event", "track_event", b"track_event", "video_stream_event", b"video_stream_event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_stream_event", b"audio_stream_event", "connect", b"connect", "disconnect", b"disconnect", "dispose", b"dispose", "message", b"message", "participant_event", b"participant_event", "publish_data", b"publish_data", "publish_track", b"publish_track", "room_event", b"room_event", "track_event", b"track_event", "video_stream_event", b"video_stream_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["room_event", "track_event", "participant_event", "video_stream_event", "audio_stream_event", "connect", "disconnect", "dispose", "publish_track", "publish_data"] | None: ...

global___FfiEvent = FfiEvent

@typing_extensions.final
class InitializeRequest(google.protobuf.message.Message):
    """Setup the callback where the foreign language can receive events
    and responses to asynchronous requests
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_CALLBACK_PTR_FIELD_NUMBER: builtins.int
    event_callback_ptr: builtins.int
    def __init__(
        self,
        *,
        event_callback_ptr: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["event_callback_ptr", b"event_callback_ptr"]) -> None: ...

global___InitializeRequest = InitializeRequest

@typing_extensions.final
class InitializeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___InitializeResponse = InitializeResponse

@typing_extensions.final
class DisposeRequest(google.protobuf.message.Message):
    """Stop all rooms synchronously (Do we need async here?).
    e.g: This is used for the Unity Editor after each assemblies reload.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASYNC_FIELD_NUMBER: builtins.int
    def __init__(
        self,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["async", b"async"]) -> None: ...

global___DisposeRequest = DisposeRequest

@typing_extensions.final
class DisposeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASYNC_ID_FIELD_NUMBER: builtins.int
    @property
    def async_id(self) -> handle_pb2.FfiAsyncId:
        """None if sync"""
    def __init__(
        self,
        *,
        async_id: handle_pb2.FfiAsyncId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_async_id", b"_async_id", "async_id", b"async_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_async_id", b"_async_id", "async_id", b"async_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_async_id", b"_async_id"]) -> typing_extensions.Literal["async_id"] | None: ...

global___DisposeResponse = DisposeResponse

@typing_extensions.final
class DisposeCallback(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASYNC_ID_FIELD_NUMBER: builtins.int
    @property
    def async_id(self) -> handle_pb2.FfiAsyncId: ...
    def __init__(
        self,
        *,
        async_id: handle_pb2.FfiAsyncId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["async_id", b"async_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["async_id", b"async_id"]) -> None: ...

global___DisposeCallback = DisposeCallback
