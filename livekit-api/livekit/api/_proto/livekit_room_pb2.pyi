"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2023 LiveKit, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
from . import livekit_egress_pb2
from . import livekit_models_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CreateRoomRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    EMPTY_TIMEOUT_FIELD_NUMBER: builtins.int
    MAX_PARTICIPANTS_FIELD_NUMBER: builtins.int
    NODE_ID_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    EGRESS_FIELD_NUMBER: builtins.int
    MIN_PLAYOUT_DELAY_FIELD_NUMBER: builtins.int
    MAX_PLAYOUT_DELAY_FIELD_NUMBER: builtins.int
    SYNC_STREAMS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """name of the room"""
    empty_timeout: builtins.int
    """number of seconds to keep the room open if no one joins"""
    max_participants: builtins.int
    """limit number of participants that can be in a room"""
    node_id: builtins.str
    """override the node room is allocated to, for debugging"""
    metadata: builtins.str
    """metadata of room"""
    @property
    def egress(self) -> global___RoomEgress:
        """egress"""
    min_playout_delay: builtins.int
    """playout delay of subscriber"""
    max_playout_delay: builtins.int
    sync_streams: builtins.bool
    """improves A/V sync when playout_delay set to a value larger than 200ms. It will disables transceiver re-use 
    so not recommended for rooms with frequent subscription changes
    """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        empty_timeout: builtins.int = ...,
        max_participants: builtins.int = ...,
        node_id: builtins.str = ...,
        metadata: builtins.str = ...,
        egress: global___RoomEgress | None = ...,
        min_playout_delay: builtins.int = ...,
        max_playout_delay: builtins.int = ...,
        sync_streams: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["egress", b"egress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["egress", b"egress", "empty_timeout", b"empty_timeout", "max_participants", b"max_participants", "max_playout_delay", b"max_playout_delay", "metadata", b"metadata", "min_playout_delay", b"min_playout_delay", "name", b"name", "node_id", b"node_id", "sync_streams", b"sync_streams"]) -> None: ...

global___CreateRoomRequest = CreateRoomRequest

@typing_extensions.final
class RoomEgress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    TRACKS_FIELD_NUMBER: builtins.int
    @property
    def room(self) -> livekit_egress_pb2.RoomCompositeEgressRequest: ...
    @property
    def participant(self) -> livekit_egress_pb2.AutoParticipantEgress: ...
    @property
    def tracks(self) -> livekit_egress_pb2.AutoTrackEgress: ...
    def __init__(
        self,
        *,
        room: livekit_egress_pb2.RoomCompositeEgressRequest | None = ...,
        participant: livekit_egress_pb2.AutoParticipantEgress | None = ...,
        tracks: livekit_egress_pb2.AutoTrackEgress | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["participant", b"participant", "room", b"room", "tracks", b"tracks"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["participant", b"participant", "room", b"room", "tracks", b"tracks"]) -> None: ...

global___RoomEgress = RoomEgress

@typing_extensions.final
class ListRoomsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """when set, will only return rooms with name match"""
    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names", b"names"]) -> None: ...

global___ListRoomsRequest = ListRoomsRequest

@typing_extensions.final
class ListRoomsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOMS_FIELD_NUMBER: builtins.int
    @property
    def rooms(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[livekit_models_pb2.Room]: ...
    def __init__(
        self,
        *,
        rooms: collections.abc.Iterable[livekit_models_pb2.Room] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rooms", b"rooms"]) -> None: ...

global___ListRoomsResponse = ListRoomsResponse

@typing_extensions.final
class DeleteRoomRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    room: builtins.str
    """name of the room"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["room", b"room"]) -> None: ...

global___DeleteRoomRequest = DeleteRoomRequest

@typing_extensions.final
class DeleteRoomResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteRoomResponse = DeleteRoomResponse

@typing_extensions.final
class ListParticipantsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    room: builtins.str
    """name of the room"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["room", b"room"]) -> None: ...

global___ListParticipantsRequest = ListParticipantsRequest

@typing_extensions.final
class ListParticipantsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTICIPANTS_FIELD_NUMBER: builtins.int
    @property
    def participants(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[livekit_models_pb2.ParticipantInfo]: ...
    def __init__(
        self,
        *,
        participants: collections.abc.Iterable[livekit_models_pb2.ParticipantInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["participants", b"participants"]) -> None: ...

global___ListParticipantsResponse = ListParticipantsResponse

@typing_extensions.final
class RoomParticipantIdentity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    room: builtins.str
    """name of the room"""
    identity: builtins.str
    """identity of the participant"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identity", b"identity", "room", b"room"]) -> None: ...

global___RoomParticipantIdentity = RoomParticipantIdentity

@typing_extensions.final
class RemoveParticipantResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RemoveParticipantResponse = RemoveParticipantResponse

@typing_extensions.final
class MuteRoomTrackRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    TRACK_SID_FIELD_NUMBER: builtins.int
    MUTED_FIELD_NUMBER: builtins.int
    room: builtins.str
    """name of the room"""
    identity: builtins.str
    track_sid: builtins.str
    """sid of the track to mute"""
    muted: builtins.bool
    """set to true to mute, false to unmute"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
        identity: builtins.str = ...,
        track_sid: builtins.str = ...,
        muted: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identity", b"identity", "muted", b"muted", "room", b"room", "track_sid", b"track_sid"]) -> None: ...

global___MuteRoomTrackRequest = MuteRoomTrackRequest

@typing_extensions.final
class MuteRoomTrackResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRACK_FIELD_NUMBER: builtins.int
    @property
    def track(self) -> livekit_models_pb2.TrackInfo: ...
    def __init__(
        self,
        *,
        track: livekit_models_pb2.TrackInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["track", b"track"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["track", b"track"]) -> None: ...

global___MuteRoomTrackResponse = MuteRoomTrackResponse

@typing_extensions.final
class UpdateParticipantRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    PERMISSION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    room: builtins.str
    identity: builtins.str
    metadata: builtins.str
    """metadata to update. skipping updates if left empty"""
    @property
    def permission(self) -> livekit_models_pb2.ParticipantPermission:
        """set to update the participant's permissions"""
    name: builtins.str
    """display name to update"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
        identity: builtins.str = ...,
        metadata: builtins.str = ...,
        permission: livekit_models_pb2.ParticipantPermission | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["permission", b"permission"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["identity", b"identity", "metadata", b"metadata", "name", b"name", "permission", b"permission", "room", b"room"]) -> None: ...

global___UpdateParticipantRequest = UpdateParticipantRequest

@typing_extensions.final
class UpdateSubscriptionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    TRACK_SIDS_FIELD_NUMBER: builtins.int
    SUBSCRIBE_FIELD_NUMBER: builtins.int
    PARTICIPANT_TRACKS_FIELD_NUMBER: builtins.int
    room: builtins.str
    identity: builtins.str
    @property
    def track_sids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """list of sids of tracks"""
    subscribe: builtins.bool
    """set to true to subscribe, false to unsubscribe from tracks"""
    @property
    def participant_tracks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[livekit_models_pb2.ParticipantTracks]:
        """list of participants and their tracks"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
        identity: builtins.str = ...,
        track_sids: collections.abc.Iterable[builtins.str] | None = ...,
        subscribe: builtins.bool = ...,
        participant_tracks: collections.abc.Iterable[livekit_models_pb2.ParticipantTracks] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identity", b"identity", "participant_tracks", b"participant_tracks", "room", b"room", "subscribe", b"subscribe", "track_sids", b"track_sids"]) -> None: ...

global___UpdateSubscriptionsRequest = UpdateSubscriptionsRequest

@typing_extensions.final
class UpdateSubscriptionsResponse(google.protobuf.message.Message):
    """empty for now"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UpdateSubscriptionsResponse = UpdateSubscriptionsResponse

@typing_extensions.final
class SendDataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    DESTINATION_SIDS_FIELD_NUMBER: builtins.int
    DESTINATION_IDENTITIES_FIELD_NUMBER: builtins.int
    TOPIC_FIELD_NUMBER: builtins.int
    room: builtins.str
    data: builtins.bytes
    kind: livekit_models_pb2.DataPacket.Kind.ValueType
    @property
    def destination_sids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """mark deprecated"""
    @property
    def destination_identities(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """when set, only forward to these identities"""
    topic: builtins.str
    def __init__(
        self,
        *,
        room: builtins.str = ...,
        data: builtins.bytes = ...,
        kind: livekit_models_pb2.DataPacket.Kind.ValueType = ...,
        destination_sids: collections.abc.Iterable[builtins.str] | None = ...,
        destination_identities: collections.abc.Iterable[builtins.str] | None = ...,
        topic: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_topic", b"_topic", "topic", b"topic"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_topic", b"_topic", "data", b"data", "destination_identities", b"destination_identities", "destination_sids", b"destination_sids", "kind", b"kind", "room", b"room", "topic", b"topic"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_topic", b"_topic"]) -> typing_extensions.Literal["topic"] | None: ...

global___SendDataRequest = SendDataRequest

@typing_extensions.final
class SendDataResponse(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SendDataResponse = SendDataResponse

@typing_extensions.final
class UpdateRoomMetadataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOM_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    room: builtins.str
    metadata: builtins.str
    """metadata to update. skipping updates if left empty"""
    def __init__(
        self,
        *,
        room: builtins.str = ...,
        metadata: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "room", b"room"]) -> None: ...

global___UpdateRoomMetadataRequest = UpdateRoomMetadataRequest
